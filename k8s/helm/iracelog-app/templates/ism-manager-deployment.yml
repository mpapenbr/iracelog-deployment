apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-ism
  namespace: {{ .Release.Namespace }}
  labels: &IsmDeploymentLabels
    app.kubernetes.io/name: {{ .Release.Name }}
    app.kubernetes.io/component: ism
  annotations: 
spec:
  selector:
    matchLabels: *IsmDeploymentLabels
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels: *IsmDeploymentLabels
        
    spec:
      initContainers:
      - name: dbinit
        image: {{ .Values.ism.image }}:{{ .Values.ismVersion }}
        envFrom:
          - secretRef:
                name: {{ .Release.Name }}-ism-secret
        env:
          - name: ISM_DB
            value: "postgresql://postgres:$(DB_USER_PASSWORD)@{{ .Release.Name }}-postgresql:5432/postgres"                
        args: [ "migrate"]

      containers:
      - name: ism
        image: {{ .Values.ism.image }}:{{ .Values.ismVersion }}
        imagePullPolicy: IfNotPresent
        resources:
          {{- toYaml .Values.ism.resources | nindent 12 }}
        envFrom:
          - secretRef:
                name: {{ .Release.Name }}-ism-secret
          - configMapRef: 
                name: {{ .Release.Name }}-ism-config
        env:
        - name: ISM_DB
          value: "postgresql://postgres:$(DB_USER_PASSWORD)@{{ .Release.Name }}-postgresql:5432/postgres"

        args: ["server"]
